// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	session "github.com/aws/aws-sdk-go/aws/session"
	mock "github.com/stretchr/testify/mock"
)

// Access is an autogenerated mock type for the Access type
type Access struct {
	mock.Mock
}

// GetAWSSession provides a mock function with given fields: accountID, functionName
func (_m *Access) GetAWSSession(accountID string, functionName string) (*session.Session, error) {
	ret := _m.Called(accountID, functionName)

	var r0 *session.Session

	var r1 error

	if rf, ok := ret.Get(0).(func(string, string) (*session.Session, error)); ok {
		return rf(accountID, functionName)
	}

	if rf, ok := ret.Get(0).(func(string, string) *session.Session); ok {
		r0 = rf(accountID, functionName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*session.Session)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(accountID, functionName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAccess creates a new instance of Access. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAccess(t interface {
	mock.TestingT
	Cleanup(func())
}) *Access {
	mock := &Access{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
