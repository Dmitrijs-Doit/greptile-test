// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"

	pkg "github.com/doitintl/hello/scheduled-tasks/assets/pkg"
	mock "github.com/stretchr/testify/mock"
)

// IAWSAssetsService is an autogenerated mock type for the IAWSAssetsService type
type IAWSAssetsService struct {
	mock.Mock
}

// ClearAllFlexsaveAssets provides a mock function with given fields: ctx
func (_m *IAWSAssetsService) ClearAllFlexsaveAssets(ctx context.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ClearAllFlexsaveAssets")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAssetFromAccountNumber provides a mock function with given fields: ctx, accountNumber
func (_m *IAWSAssetsService) GetAssetFromAccountNumber(ctx context.Context, accountNumber string) (*pkg.AWSAsset, error) {
	ret := _m.Called(ctx, accountNumber)

	if len(ret) == 0 {
		panic("no return value specified for GetAssetFromAccountNumber")
	}

	var r0 *pkg.AWSAsset
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*pkg.AWSAsset, error)); ok {
		return rf(ctx, accountNumber)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *pkg.AWSAsset); ok {
		r0 = rf(ctx, accountNumber)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pkg.AWSAsset)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, accountNumber)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAssetsAllMPA provides a mock function with given fields: ctx
func (_m *IAWSAssetsService) UpdateAssetsAllMPA(ctx context.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAssetsAllMPA")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateAssetsMPA provides a mock function with given fields: ctx, mpaID
func (_m *IAWSAssetsService) UpdateAssetsMPA(ctx context.Context, mpaID string) error {
	ret := _m.Called(ctx, mpaID)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAssetsMPA")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, mpaID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateManualAssetsMPA provides a mock function with given fields: ctx, mpaID
func (_m *IAWSAssetsService) UpdateManualAssetsMPA(ctx context.Context, mpaID string) error {
	ret := _m.Called(ctx, mpaID)

	if len(ret) == 0 {
		panic("no return value specified for UpdateManualAssetsMPA")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, mpaID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateStandaloneAssets provides a mock function with given fields: ctx, customerID, accountID
func (_m *IAWSAssetsService) UpdateStandaloneAssets(ctx context.Context, customerID string, accountID string) error {
	ret := _m.Called(ctx, customerID, accountID)

	if len(ret) == 0 {
		panic("no return value specified for UpdateStandaloneAssets")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, customerID, accountID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIAWSAssetsService creates a new instance of IAWSAssetsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIAWSAssetsService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IAWSAssetsService {
	mock := &IAWSAssetsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
