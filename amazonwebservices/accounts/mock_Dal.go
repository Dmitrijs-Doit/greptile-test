// Code generated by mockery v2.13.1. DO NOT EDIT.

package accounts

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDal is an autogenerated mock type for the Dal type
type MockDal struct {
	mock.Mock
}

// findAccountByID provides a mock function with given fields: ctx, payerID
func (_m *MockDal) findAccountByID(ctx context.Context, payerID string) (*Account, error) {
	ret := _m.Called(ctx, payerID)

	var r0 *Account
	if rf, ok := ret.Get(0).(func(context.Context, string) *Account); ok {
		r0 = rf(ctx, payerID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, payerID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockDal interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDal creates a new instance of MockDal. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDal(t mockConstructorTestingTNewMockDal) *MockDal {
	mock := &MockDal{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
