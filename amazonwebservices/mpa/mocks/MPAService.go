// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mpa "github.com/doitintl/hello/scheduled-tasks/amazonwebservices/mpa"
	mock "github.com/stretchr/testify/mock"
)

// MPAService is an autogenerated mock type for the MPAService type
type MPAService struct {
	mock.Mock
}

// CreateGoogleGroup provides a mock function with given fields: ctx, req
func (_m *MPAService) CreateGoogleGroup(ctx context.Context, req *mpa.MPAGoogleGroup) error {
	ret := _m.Called(ctx, req)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *mpa.MPAGoogleGroup) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateMPA provides a mock function with given fields: ctx, req
func (_m *MPAService) ValidateMPA(ctx context.Context, req *mpa.ValidateMPARequest) error {
	ret := _m.Called(ctx, req)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *mpa.ValidateMPARequest) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMPAService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMPAService creates a new instance of MPAService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMPAService(t mockConstructorTestingTNewMPAService) *MPAService {
	mock := &MPAService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
