// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// NotificationPublisher is an autogenerated mock type for the NotificationPublisher type
type NotificationPublisher struct {
	mock.Mock
}

// PublishSlackNotification provides a mock function with given fields: ctx, notification
func (_m *NotificationPublisher) PublishSlackNotification(ctx context.Context, notification map[string]interface{}) error {
	ret := _m.Called(ctx, notification)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]interface{}) error); ok {
		r0 = rf(ctx, notification)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewNotificationPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewNotificationPublisher creates a new instance of NotificationPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNotificationPublisher(t mockConstructorTestingTNewNotificationPublisher) *NotificationPublisher {
	mock := &NotificationPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
