// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// IRippling is an autogenerated mock type for the IRippling type
type IRippling struct {
	mock.Mock
}

// AddAccountManager provides a mock function with given fields: ctx, email
func (_m *IRippling) AddAccountManager(ctx context.Context, email string) error {
	ret := _m.Called(ctx, email)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SyncAccountManagersHierarchy provides a mock function with given fields: ctx
func (_m *IRippling) SyncAccountManagersHierarchy(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SyncFieldSalesManagerRole provides a mock function with given fields: ctx
func (_m *IRippling) SyncFieldSalesManagerRole(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIRippling interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRippling creates a new instance of IRippling. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRippling(t mockConstructorTestingTNewIRippling) *IRippling {
	mock := &IRippling{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
