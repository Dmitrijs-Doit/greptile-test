// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/doitintl/hello/scheduled-tasks/common"

	mail "github.com/sendgrid/sendgrid-go/helpers/mail"

	mock "github.com/stretchr/testify/mock"
)

// IasgCustomerMailer is an autogenerated mock type for the IasgCustomerMailer type
type IasgCustomerMailer struct {
	mock.Mock
}

// SendEmails provides a mock function with given fields: ctx, users, AMs, prod, sendEmailWithPersonalizations
func (_m *IasgCustomerMailer) SendEmails(ctx context.Context, users []common.User, AMs []common.AccountManager, prod bool, sendEmailWithPersonalizations func([]*mail.Personalization, string, []string) error) error {
	ret := _m.Called(ctx, users, AMs, prod, sendEmailWithPersonalizations)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []common.User, []common.AccountManager, bool, func([]*mail.Personalization, string, []string) error) error); ok {
		r0 = rf(ctx, users, AMs, prod, sendEmailWithPersonalizations)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIasgCustomerMailer interface {
	mock.TestingT
	Cleanup(func())
}

// NewIasgCustomerMailer creates a new instance of IasgCustomerMailer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIasgCustomerMailer(t mockConstructorTestingTNewIasgCustomerMailer) *IasgCustomerMailer {
	mock := &IasgCustomerMailer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
