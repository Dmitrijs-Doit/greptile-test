// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/doitintl/hello/scheduled-tasks/courier/domain"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Courier is an autogenerated mock type for the Courier type
type Courier struct {
	mock.Mock
}

// CreateExportNotificationsTasks provides a mock function with given fields: ctx, startDate, notificationIDs
func (_m *Courier) CreateExportNotificationsTasks(ctx context.Context, startDate time.Time, notificationIDs []domain.Notification) error {
	ret := _m.Called(ctx, startDate, notificationIDs)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, []domain.Notification) error); ok {
		r0 = rf(ctx, startDate, notificationIDs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ExportNotificationToBQ provides a mock function with given fields: ctx, startDate, notificationID
func (_m *Courier) ExportNotificationToBQ(ctx context.Context, startDate time.Time, notificationID domain.Notification) error {
	ret := _m.Called(ctx, startDate, notificationID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, domain.Notification) error); ok {
		r0 = rf(ctx, startDate, notificationID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCourier creates a new instance of Courier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCourier(t interface {
	mock.TestingT
	Cleanup(func())
}) *Courier {
	mock := &Courier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
