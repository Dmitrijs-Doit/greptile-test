// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/doitintl/hello/scheduled-tasks/courier/domain"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// CourierBQ is an autogenerated mock type for the CourierBQ type
type CourierBQ struct {
	mock.Mock
}

// SaveNotifications provides a mock function with given fields: ctx, notificationID, notificationsPerDayMap
func (_m *CourierBQ) SaveMessages(ctx context.Context, notificationID domain.Notification, notificationsPerDayMap map[time.Time][]*domain.MessageBQ) error {
	ret := _m.Called(ctx, notificationID, notificationsPerDayMap)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.Notification, map[time.Time][]*domain.MessageBQ) error); ok {
		r0 = rf(ctx, notificationID, notificationsPerDayMap)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCourierBQ creates a new instance of CourierBQ. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCourierBQ(t interface {
	mock.TestingT
	Cleanup(func())
}) *CourierBQ {
	mock := &CourierBQ{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
