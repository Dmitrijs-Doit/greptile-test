// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	context "context"

	api "github.com/trycourier/courier-go/v3"

	domain "github.com/doitintl/hello/scheduled-tasks/courier/domain"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// CourierDAL is an autogenerated mock type for the CourierDAL type
type CourierDAL struct {
	mock.Mock
}

// GetNotifications provides a mock function with given fields: ctx, startDate, notification
func (_m *CourierDAL) GetMessages(ctx context.Context, startDate time.Time, notification domain.Notification) ([]*api.MessageDetails, error) {
	ret := _m.Called(ctx, startDate, notification)

	var r0 []*api.MessageDetails
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, domain.Notification) ([]*api.MessageDetails, error)); ok {
		return rf(ctx, startDate, notification)
	}
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, domain.Notification) []*api.MessageDetails); ok {
		r0 = rf(ctx, startDate, notification)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*api.MessageDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, time.Time, domain.Notification) error); ok {
		r1 = rf(ctx, startDate, notification)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCourierDAL creates a new instance of CourierDAL. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCourierDAL(t interface {
	mock.TestingT
	Cleanup(func())
}) *CourierDAL {
	mock := &CourierDAL{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
