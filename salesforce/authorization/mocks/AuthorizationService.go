// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	context "context"

	authorization "github.com/doitintl/hello/scheduled-tasks/salesforce/authorization"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// AuthorizationService is an autogenerated mock type for the AuthorizationService type
type AuthorizationService struct {
	mock.Mock
}

// Authenticate provides a mock function with given fields: ctx
func (_m *AuthorizationService) Authenticate(ctx context.Context) (authorization.Authorization, error) {
	ret := _m.Called(ctx)

	var r0 authorization.Authorization
	if rf, ok := ret.Get(0).(func(context.Context) authorization.Authorization); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(authorization.Authorization)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInstanceURL provides a mock function with given fields:
func (_m *AuthorizationService) GetInstanceURL() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewAuthorizationService creates a new instance of AuthorizationService. It also registers a cleanup function to assert the mocks expectations.
func NewAuthorizationService(t testing.TB) *AuthorizationService {
	mock := &AuthorizationService{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
