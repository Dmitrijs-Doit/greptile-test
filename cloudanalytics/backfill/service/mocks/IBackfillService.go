// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/backfill/domain"

	mock "github.com/stretchr/testify/mock"
)

// IBackfillService is an autogenerated mock type for the IBackfillService type
type IBackfillService struct {
	mock.Mock
}

// BackfillCustomer provides a mock function with given fields: ctx, customerID, taskBody
func (_m *IBackfillService) BackfillCustomer(ctx context.Context, customerID string, taskBody *domain.TaskBodyHandlerCustomer) error {
	ret := _m.Called(ctx, customerID, taskBody)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *domain.TaskBodyHandlerCustomer) error); ok {
		r0 = rf(ctx, customerID, taskBody)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIBackfillService creates a new instance of IBackfillService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIBackfillService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IBackfillService {
	mock := &IBackfillService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
