// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	context "context"

	errormsg "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/externalapi/domain/errormsg"

	mock "github.com/stretchr/testify/mock"

	report "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/reports/domain/report"
)

// IReportValidatorRule is an autogenerated mock type for the IReportValidatorRule type
type IReportValidatorRule struct {
	mock.Mock
}

// Validate provides a mock function with given fields: ctx, _a1
func (_m *IReportValidatorRule) Validate(ctx context.Context, _a1 *report.Report) ([]errormsg.ErrorMsg, error) {
	ret := _m.Called(ctx, _a1)

	var r0 []errormsg.ErrorMsg

	var r1 error

	if rf, ok := ret.Get(0).(func(context.Context, *report.Report) ([]errormsg.ErrorMsg, error)); ok {
		return rf(ctx, _a1)
	}

	if rf, ok := ret.Get(0).(func(context.Context, *report.Report) []errormsg.ErrorMsg); ok {
		r0 = rf(ctx, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]errormsg.ErrorMsg)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *report.Report) error); ok {
		r1 = rf(ctx, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIReportValidatorRule interface {
	mock.TestingT
	Cleanup(func())
}

// NewIReportValidatorRule creates a new instance of IReportValidatorRule. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIReportValidatorRule(t mockConstructorTestingTNewIReportValidatorRule) *IReportValidatorRule {
	mock := &IReportValidatorRule{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
