// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/export/domain"

	mock "github.com/stretchr/testify/mock"
)

// IExportService is an autogenerated mock type for the IExportService type
type IExportService struct {
	mock.Mock
}

// ExportBillingData provides a mock function with given fields: ctx, taskBody
func (_m *IExportService) ExportBillingData(ctx context.Context, taskBody *domain.BillingExportInputStruct) error {
	ret := _m.Called(ctx, taskBody)

	if len(ret) == 0 {
		panic("no return value specified for ExportBillingData")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.BillingExportInputStruct) error); ok {
		r0 = rf(ctx, taskBody)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIExportService creates a new instance of IExportService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIExportService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IExportService {
	mock := &IExportService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
