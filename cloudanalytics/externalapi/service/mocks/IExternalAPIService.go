// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	cloudanalytics "github.com/doitintl/hello/scheduled-tasks/cloudanalytics"
	domain "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/externalapi/domain"

	mock "github.com/stretchr/testify/mock"

	report "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/reports/domain/report"
)

// IExternalAPIService is an autogenerated mock type for the IExternalAPIService type
type IExternalAPIService struct {
	mock.Mock
}

// ProcessResult provides a mock function with given fields: qr, r, result
func (_m *IExternalAPIService) ProcessResult(qr *cloudanalytics.QueryRequest, r *report.Report, result cloudanalytics.QueryResult) domain.RunReportResult {
	ret := _m.Called(qr, r, result)

	var r0 domain.RunReportResult
	if rf, ok := ret.Get(0).(func(*cloudanalytics.QueryRequest, *report.Report, cloudanalytics.QueryResult) domain.RunReportResult); ok {
		r0 = rf(qr, r, result)
	} else {
		r0 = ret.Get(0).(domain.RunReportResult)
	}

	return r0
}

type mockConstructorTestingTNewIExternalAPIService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIExternalAPIService creates a new instance of IExternalAPIService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIExternalAPIService(t mockConstructorTestingTNewIExternalAPIService) *IExternalAPIService {
	mock := &IExternalAPIService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
