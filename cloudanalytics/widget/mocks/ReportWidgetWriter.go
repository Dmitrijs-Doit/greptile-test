// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/widget/domain"
	mock "github.com/stretchr/testify/mock"
)

// ReportWidgetWriter is an autogenerated mock type for the ReportWidgetWriter type
type ReportWidgetWriter struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, minUpdateDelayMinutes, request
func (_m *ReportWidgetWriter) Save(ctx context.Context, minUpdateDelayMinutes int, request domain.ReportWidgetRequest) error {
	ret := _m.Called(ctx, minUpdateDelayMinutes, request)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, domain.ReportWidgetRequest) error); ok {
		r0 = rf(ctx, minUpdateDelayMinutes, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewReportWidgetWriter creates a new instance of ReportWidgetWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReportWidgetWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *ReportWidgetWriter {
	mock := &ReportWidgetWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
