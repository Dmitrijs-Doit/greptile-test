// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	doitemployees "github.com/doitintl/hello/scheduled-tasks/doitemployees"

	mock "github.com/stretchr/testify/mock"
)

// CheckCAOwnerInterface is an autogenerated mock type for the CheckCAOwnerInterface type
type CheckCAOwnerInterface struct {
	mock.Mock
}

// CheckCAOwner provides a mock function with given fields: ctx, es, userID, email
func (_m *CheckCAOwnerInterface) CheckCAOwner(ctx context.Context, es doitemployees.ServiceInterface, userID string, email string) (bool, error) {
	ret := _m.Called(ctx, es, userID, email)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, doitemployees.ServiceInterface, string, string) bool); ok {
		r0 = rf(ctx, es, userID, email)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, doitemployees.ServiceInterface, string, string) error); ok {
		r1 = rf(ctx, es, userID, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCheckCAOwnerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCheckCAOwnerInterface creates a new instance of CheckCAOwnerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCheckCAOwnerInterface(t mockConstructorTestingTNewCheckCAOwnerInterface) *CheckCAOwnerInterface {
	mock := &CheckCAOwnerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
