// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/doitintl/hello/scheduled-tasks/cloudanalytics/datahub/domain"
	http "github.com/doitintl/http"

	mock "github.com/stretchr/testify/mock"
)

// DatahubInternalAPIDAL is an autogenerated mock type for the DatahubInternalAPIDAL type
type DatahubInternalAPIDAL struct {
	mock.Mock
}

// IngestEvents provides a mock function with given fields: ctx, req
func (_m *DatahubInternalAPIDAL) IngestEvents(ctx context.Context, req domain.IngestEventsInternalReq) (*http.Response, error) {
	ret := _m.Called(ctx, req)

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.IngestEventsInternalReq) (*http.Response, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, domain.IngestEventsInternalReq) *http.Response); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, domain.IngestEventsInternalReq) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewDatahubInternalAPIDAL creates a new instance of DatahubInternalAPIDAL. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDatahubInternalAPIDAL(t interface {
	mock.TestingT
	Cleanup(func())
}) *DatahubInternalAPIDAL {
	mock := &DatahubInternalAPIDAL{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
