// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// InvoiceMonthParser is an autogenerated mock type for the InvoiceMonthParser type
type InvoiceMonthParser struct {
	mock.Mock
}

// GetInvoiceMonth provides a mock function with given fields: invoiceMonthInput
func (_m *InvoiceMonthParser) GetInvoiceMonth(invoiceMonthInput string) (time.Time, error) {
	ret := _m.Called(invoiceMonthInput)

	var r0 time.Time
	if rf, ok := ret.Get(0).(func(string) time.Time); ok {
		r0 = rf(invoiceMonthInput)
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(invoiceMonthInput)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInvoicingDaySwitchOver provides a mock function with given fields:
func (_m *InvoiceMonthParser) GetInvoicingDaySwitchOver() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewInvoiceMonthParser interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoiceMonthParser creates a new instance of InvoiceMonthParser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoiceMonthParser(t mockConstructorTestingTNewInvoiceMonthParser) *InvoiceMonthParser {
	mock := &InvoiceMonthParser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
