// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	firestore "cloud.google.com/go/firestore"

	invoicing "github.com/doitintl/hello/scheduled-tasks/invoicing"

	mock "github.com/stretchr/testify/mock"
)

// InvoicesDAL is an autogenerated mock type for the InvoicesDAL type
type InvoicesDAL struct {
	mock.Mock
}

// ListInvoices provides a mock function with given fields: ctx, customerRef, limit
func (_m *InvoicesDAL) ListInvoices(ctx context.Context, customerRef *firestore.DocumentRef, limit int) ([]*invoicing.Invoice, error) {
	ret := _m.Called(ctx, customerRef, limit)

	var r0 []*invoicing.Invoice
	if rf, ok := ret.Get(0).(func(context.Context, *firestore.DocumentRef, int) []*invoicing.Invoice); ok {
		r0 = rf(ctx, customerRef, limit)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*invoicing.Invoice)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *firestore.DocumentRef, int) error); ok {
		r1 = rf(ctx, customerRef, limit)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewInvoicesDAL interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoicesDAL creates a new instance of InvoicesDAL. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoicesDAL(t mockConstructorTestingTNewInvoicesDAL) *InvoicesDAL {
	mock := &InvoicesDAL{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
