// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	context "context"

	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// FlexsaveStandalone is an autogenerated mock type for the FlexsaveStandalone type
type FlexsaveStandalone struct {
	mock.Mock
}

// FlexsaveDataWorker provides a mock function with given fields: ginCtx, customerID, invoiceMonthInput, provider
func (_m *FlexsaveStandalone) FlexsaveDataWorker(ginCtx *gin.Context, customerID string, invoiceMonthInput string, provider string) error {
	ret := _m.Called(ginCtx, customerID, invoiceMonthInput, provider)

	var r0 error
	if rf, ok := ret.Get(0).(func(*gin.Context, string, string, string) error); ok {
		r0 = rf(ginCtx, customerID, invoiceMonthInput, provider)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateFlexsaveInvoicingData provides a mock function with given fields: ctx, invoiceMonthInput, provider
func (_m *FlexsaveStandalone) UpdateFlexsaveInvoicingData(ctx context.Context, invoiceMonthInput string, provider string) error {
	ret := _m.Called(ctx, invoiceMonthInput, provider)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, invoiceMonthInput, provider)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFlexsaveStandalone interface {
	mock.TestingT
	Cleanup(func())
}

// NewFlexsaveStandalone creates a new instance of FlexsaveStandalone. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFlexsaveStandalone(t mockConstructorTestingTNewFlexsaveStandalone) *FlexsaveStandalone {
	mock := &FlexsaveStandalone{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
