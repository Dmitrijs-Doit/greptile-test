// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/doitintl/hello/scheduled-tasks/common"

	domain "github.com/doitintl/hello/scheduled-tasks/invoicing/domain"

	firestore "cloud.google.com/go/firestore"

	mock "github.com/stretchr/testify/mock"
)

// InvoicingService is an autogenerated mock type for the InvoicingService type
type InvoicingService struct {
	mock.Mock
}

// GetInvoiceRows provides a mock function with given fields: ctx, task, customerRef, entities, respChan
func (_m *InvoicingService) GetInvoiceRows(ctx context.Context, task *domain.CustomerTaskData, customerRef *firestore.DocumentRef, entities map[string]*common.Entity, respChan chan<- *domain.ProductInvoiceRows) {
	_m.Called(ctx, task, customerRef, entities, respChan)
}

type mockConstructorTestingTNewInvoicingService interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoicingService creates a new instance of InvoicingService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoicingService(t mockConstructorTestingTNewInvoicingService) *InvoicingService {
	mock := &InvoicingService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
