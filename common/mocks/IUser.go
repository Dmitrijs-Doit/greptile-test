// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/doitintl/hello/scheduled-tasks/common"

	mock "github.com/stretchr/testify/mock"
)

// IUser is an autogenerated mock type for the IUser type
type IUser struct {
	mock.Mock
}

// HasRequiredPermissions provides a mock function with given fields: ctx, user, requiredPermissions
func (_m *IUser) HasRequiredPermissions(ctx context.Context, user *common.User, requiredPermissions []common.Permission) error {
	ret := _m.Called(ctx, user, requiredPermissions)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *common.User, []common.Permission) error); ok {
		r0 = rf(ctx, user, requiredPermissions)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIUser interface {
	mock.TestingT
	Cleanup(func())
}

// NewIUser creates a new instance of IUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIUser(t mockConstructorTestingTNewIUser) *IUser {
	mock := &IUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
