// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	bigquery "cloud.google.com/go/bigquery"

	mock "github.com/stretchr/testify/mock"
)

// ExternalBigQueryClient is an autogenerated mock type for the ExternalBigQueryClient type
type ExternalBigQueryClient struct {
	mock.Mock
}

// GetCustomerBQClient provides a mock function with given fields: ctx, billingAccountID
func (_m *ExternalBigQueryClient) GetCustomerBQClient(ctx context.Context, billingAccountID string) (*bigquery.Client, error) {
	ret := _m.Called(ctx, billingAccountID)

	var r0 *bigquery.Client
	if rf, ok := ret.Get(0).(func(context.Context, string) *bigquery.Client); ok {
		r0 = rf(ctx, billingAccountID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*bigquery.Client)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, billingAccountID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCustomerBQClientWithParams provides a mock function with given fields: ctx, serviceAccountEmail, projectID
func (_m *ExternalBigQueryClient) GetCustomerBQClientWithParams(ctx context.Context, serviceAccountEmail string, projectID string) (*bigquery.Client, error) {
	ret := _m.Called(ctx, serviceAccountEmail, projectID)

	var r0 *bigquery.Client
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *bigquery.Client); ok {
		r0 = rf(ctx, serviceAccountEmail, projectID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*bigquery.Client)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, serviceAccountEmail, projectID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExternalBigQueryClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewExternalBigQueryClient creates a new instance of ExternalBigQueryClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExternalBigQueryClient(t mockConstructorTestingTNewExternalBigQueryClient) *ExternalBigQueryClient {
	mock := &ExternalBigQueryClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
