// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/doitintl/hello/scheduled-tasks/flexsavestandalone/gcp/shared/domain"

	mock "github.com/stretchr/testify/mock"
)

// BillingUpdate is an autogenerated mock type for the BillingUpdate type
type BillingUpdate struct {
	mock.Mock
}

// ListBillingUpdateEvents provides a mock function with given fields: ctx
func (_m *BillingUpdate) ListBillingUpdateEvents(ctx context.Context) ([]*domain.BillingEvent, error) {
	ret := _m.Called(ctx)

	var r0 []*domain.BillingEvent
	if rf, ok := ret.Get(0).(func(context.Context) []*domain.BillingEvent); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.BillingEvent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTimeCompleted provides a mock function with given fields: ctx, id
func (_m *BillingUpdate) UpdateTimeCompleted(ctx context.Context, id string) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBillingUpdate interface {
	mock.TestingT
	Cleanup(func())
}

// NewBillingUpdate creates a new instance of BillingUpdate. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBillingUpdate(t mockConstructorTestingTNewBillingUpdate) *BillingUpdate {
	mock := &BillingUpdate{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
